<UserControl
    x:Class="BiliBili_WinUI_Desktop.Components.Widgets.IconInputBox"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:BiliBili_WinUI_Desktop.Components.Widgets"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="300"
    d:DesignWidth="400"
    mc:Ignorable="d">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <TextBlock
            x:Name="HeaderBlock"
            Margin="0,0,0,10"
            HorizontalAlignment="Left"
            Style="{StaticResource TipTextStyle}"
            Text="{x:Bind HeaderText, Mode=OneWay}"
            Visibility="Collapsed" />
        <Grid
            x:Name="Container"
            Grid.Row="1"
            Padding="{x:Bind InputPadding, Mode=OneWay}"
            BorderBrush="{ThemeResource LineColor}"
            BorderThickness="1"
            CornerRadius="4"
            PointerEntered="Container_PointerEntered"
            PointerExited="Container_PointerExited">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock
                x:Name="IconBlock"
                Margin="0,0,15,0"
                VerticalAlignment="Center"
                FontSize="15"
                Foreground="{ThemeResource TipTextColor}"
                Style="{StaticResource BasicIconTextStyle}"
                Text="{x:Bind PrefixIcon, Mode=OneWay}"
                Visibility="Collapsed" />
            <ProgressRing
                x:Name="LoadingRing"
                Width="25"
                Height="25"
                Margin="0,0,15,0"
                VerticalAlignment="Center"
                Foreground="{ThemeResource PrimaryColor}"
                Visibility="Collapsed" />
            <TextBox
                x:Name="InputTextBox"
                Grid.Column="1"
                Padding="0,7,0,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                GotFocus="InputTextBox_GotFocus"
                LostFocus="InputPasswordBox_LostFocus"
                PlaceholderText="{x:Bind PlaceholderText, Mode=OneWay}"
                Style="{StaticResource TransparentTextBoxStyle}"
                TextChanged="InputTextBox_TextChanged" />
            <PasswordBox
                x:Name="InputPasswordBox"
                Grid.Column="1"
                Padding="0,7,0,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                GotFocus="InputTextBox_GotFocus"
                LostFocus="InputPasswordBox_LostFocus"
                PasswordChanged="PasswordTextBox_PasswordChanged"
                PlaceholderText="{x:Bind PlaceholderText, Mode=OneWay}"
                Style="{StaticResource TransparentPasswordBoxStyle}"
                Visibility="Collapsed" />
        </Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="Common">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                    <VisualState.Setters>
                        <Setter Target="Container.BorderBrush" Value="{ThemeResource LineColorOver}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Focus">
                    <VisualState.Setters>
                        <Setter Target="IconBlock.Foreground" Value="{ThemeResource ImportantTextColor}" />
                        <Setter Target="Container.BorderBrush" Value="{ThemeResource PrimaryColor}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Disabled">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind IsEnabled.Equals(x:False), Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="InputTextBox.IsEnabled" Value="False" />
                        <Setter Target="InputPasswordBox.IsEnabled" Value="False" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</UserControl>
